//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("eTradeDbModel", "FK_Profile_eUsers", "eUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eTrade.DataContext.eUser), "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eTrade.DataContext.Profile), true)]
[assembly: EdmRelationshipAttribute("eTradeDbModel", "FK_WatchList_Profile", "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eTrade.DataContext.Profile), "WatchList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eTrade.DataContext.WatchList), true)]
[assembly: EdmRelationshipAttribute("eTradeDbModel", "FK_BuyOrders_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eTrade.DataContext.Portfolio), "BuyOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eTrade.DataContext.BuyOrder), true)]
[assembly: EdmRelationshipAttribute("eTradeDbModel", "FK_Portfolio_Profile", "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eTrade.DataContext.Profile), "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eTrade.DataContext.Portfolio), true)]
[assembly: EdmRelationshipAttribute("eTradeDbModel", "FK_SellOrders_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eTrade.DataContext.Portfolio), "SellOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eTrade.DataContext.SellOrder), true)]

#endregion

namespace eTrade.DataContext
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class eTradeDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new eTradeDbEntities object using the connection string found in the 'eTradeDbEntities' section of the application configuration file.
        /// </summary>
        public eTradeDbEntities() : base("name=eTradeDbEntities", "eTradeDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eTradeDbEntities object.
        /// </summary>
        public eTradeDbEntities(string connectionString) : base(connectionString, "eTradeDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eTradeDbEntities object.
        /// </summary>
        public eTradeDbEntities(EntityConnection connection) : base(connection, "eTradeDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<eUser> eUsers
        {
            get
            {
                if ((_eUsers == null))
                {
                    _eUsers = base.CreateObjectSet<eUser>("eUsers");
                }
                return _eUsers;
            }
        }
        private ObjectSet<eUser> _eUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profiles
        {
            get
            {
                if ((_Profiles == null))
                {
                    _Profiles = base.CreateObjectSet<Profile>("Profiles");
                }
                return _Profiles;
            }
        }
        private ObjectSet<Profile> _Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WatchList> WatchLists
        {
            get
            {
                if ((_WatchLists == null))
                {
                    _WatchLists = base.CreateObjectSet<WatchList>("WatchLists");
                }
                return _WatchLists;
            }
        }
        private ObjectSet<WatchList> _WatchLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BuyOrder> BuyOrders
        {
            get
            {
                if ((_BuyOrders == null))
                {
                    _BuyOrders = base.CreateObjectSet<BuyOrder>("BuyOrders");
                }
                return _BuyOrders;
            }
        }
        private ObjectSet<BuyOrder> _BuyOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Portfolio> Portfolios
        {
            get
            {
                if ((_Portfolios == null))
                {
                    _Portfolios = base.CreateObjectSet<Portfolio>("Portfolios");
                }
                return _Portfolios;
            }
        }
        private ObjectSet<Portfolio> _Portfolios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SellOrder> SellOrders
        {
            get
            {
                if ((_SellOrders == null))
                {
                    _SellOrders = base.CreateObjectSet<SellOrder>("SellOrders");
                }
                return _SellOrders;
            }
        }
        private ObjectSet<SellOrder> _SellOrders;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the eUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToeUsers(eUser eUser)
        {
            base.AddObject("eUsers", eUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfiles(Profile profile)
        {
            base.AddObject("Profiles", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WatchLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWatchLists(WatchList watchList)
        {
            base.AddObject("WatchLists", watchList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BuyOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuyOrders(BuyOrder buyOrder)
        {
            base.AddObject("BuyOrders", buyOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Portfolios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolios(Portfolio portfolio)
        {
            base.AddObject("Portfolios", portfolio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SellOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSellOrders(SellOrder sellOrder)
        {
            base.AddObject("SellOrders", sellOrder);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eTradeDbModel", Name="BuyOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BuyOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BuyOrder object.
        /// </summary>
        /// <param name="buyID">Initial value of the BuyID property.</param>
        /// <param name="portfolioID">Initial value of the PortfolioID property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="dateofPurchase">Initial value of the DateofPurchase property.</param>
        public static BuyOrder CreateBuyOrder(global::System.Int64 buyID, global::System.Int64 portfolioID, global::System.Decimal volume, global::System.Decimal unitPrice, global::System.DateTime dateofPurchase)
        {
            BuyOrder buyOrder = new BuyOrder();
            buyOrder.BuyID = buyID;
            buyOrder.PortfolioID = portfolioID;
            buyOrder.Volume = volume;
            buyOrder.UnitPrice = unitPrice;
            buyOrder.DateofPurchase = dateofPurchase;
            return buyOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BuyID
        {
            get
            {
                return _BuyID;
            }
            set
            {
                if (_BuyID != value)
                {
                    OnBuyIDChanging(value);
                    ReportPropertyChanging("BuyID");
                    _BuyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BuyID");
                    OnBuyIDChanged();
                }
            }
        }
        private global::System.Int64 _BuyID;
        partial void OnBuyIDChanging(global::System.Int64 value);
        partial void OnBuyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PortfolioID
        {
            get
            {
                return _PortfolioID;
            }
            set
            {
                OnPortfolioIDChanging(value);
                ReportPropertyChanging("PortfolioID");
                _PortfolioID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioID");
                OnPortfolioIDChanged();
            }
        }
        private global::System.Int64 _PortfolioID;
        partial void OnPortfolioIDChanging(global::System.Int64 value);
        partial void OnPortfolioIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Decimal _Volume;
        partial void OnVolumeChanging(global::System.Decimal value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateofPurchase
        {
            get
            {
                return _DateofPurchase;
            }
            set
            {
                OnDateofPurchaseChanging(value);
                ReportPropertyChanging("DateofPurchase");
                _DateofPurchase = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateofPurchase");
                OnDateofPurchaseChanged();
            }
        }
        private global::System.DateTime _DateofPurchase;
        partial void OnDateofPurchaseChanging(global::System.DateTime value);
        partial void OnDateofPurchaseChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eTradeDbModel", "FK_BuyOrders_Portfolio", "Portfolio")]
        public Portfolio Portfolio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("eTradeDbModel.FK_BuyOrders_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("eTradeDbModel.FK_BuyOrders_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> PortfolioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("eTradeDbModel.FK_BuyOrders_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("eTradeDbModel.FK_BuyOrders_Portfolio", "Portfolio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eTradeDbModel", Name="eUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class eUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new eUser object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="emailID">Initial value of the EmailID property.</param>
        /// <param name="registerDate">Initial value of the RegisterDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static eUser CreateeUser(global::System.Int64 userID, global::System.String userName, global::System.String password, global::System.String emailID, global::System.DateTime registerDate, global::System.Boolean isActive)
        {
            eUser eUser = new eUser();
            eUser.UserID = userID;
            eUser.UserName = userName;
            eUser.Password = password;
            eUser.EmailID = emailID;
            eUser.RegisterDate = registerDate;
            eUser.IsActive = isActive;
            return eUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int64 _UserID;
        partial void OnUserIDChanging(global::System.Int64 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailID
        {
            get
            {
                return _EmailID;
            }
            set
            {
                OnEmailIDChanging(value);
                ReportPropertyChanging("EmailID");
                _EmailID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailID");
                OnEmailIDChanged();
            }
        }
        private global::System.String _EmailID;
        partial void OnEmailIDChanging(global::System.String value);
        partial void OnEmailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegisterDate
        {
            get
            {
                return _RegisterDate;
            }
            set
            {
                OnRegisterDateChanging(value);
                ReportPropertyChanging("RegisterDate");
                _RegisterDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisterDate");
                OnRegisterDateChanged();
            }
        }
        private global::System.DateTime _RegisterDate;
        partial void OnRegisterDateChanging(global::System.DateTime value);
        partial void OnRegisterDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eTradeDbModel", "FK_Profile_eUsers", "Profile")]
        public EntityCollection<Profile> Profiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Profile>("eTradeDbModel.FK_Profile_eUsers", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Profile>("eTradeDbModel.FK_Profile_eUsers", "Profile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eTradeDbModel", Name="Portfolio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Portfolio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Portfolio object.
        /// </summary>
        /// <param name="portfolioID">Initial value of the PortfolioID property.</param>
        /// <param name="profileID">Initial value of the ProfileID property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        /// <param name="totalVolumes">Initial value of the TotalVolumes property.</param>
        /// <param name="isActive">Initial value of the isActive property.</param>
        /// <param name="profit">Initial value of the Profit property.</param>
        public static Portfolio CreatePortfolio(global::System.Int64 portfolioID, global::System.Int64 profileID, global::System.String symbol, global::System.Decimal totalVolumes, global::System.Boolean isActive, global::System.Decimal profit)
        {
            Portfolio portfolio = new Portfolio();
            portfolio.PortfolioID = portfolioID;
            portfolio.ProfileID = profileID;
            portfolio.Symbol = symbol;
            portfolio.TotalVolumes = totalVolumes;
            portfolio.isActive = isActive;
            portfolio.Profit = profit;
            return portfolio;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PortfolioID
        {
            get
            {
                return _PortfolioID;
            }
            set
            {
                if (_PortfolioID != value)
                {
                    OnPortfolioIDChanging(value);
                    ReportPropertyChanging("PortfolioID");
                    _PortfolioID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PortfolioID");
                    OnPortfolioIDChanged();
                }
            }
        }
        private global::System.Int64 _PortfolioID;
        partial void OnPortfolioIDChanging(global::System.Int64 value);
        partial void OnPortfolioIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                OnProfileIDChanging(value);
                ReportPropertyChanging("ProfileID");
                _ProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileID");
                OnProfileIDChanged();
            }
        }
        private global::System.Int64 _ProfileID;
        partial void OnProfileIDChanging(global::System.Int64 value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalVolumes
        {
            get
            {
                return _TotalVolumes;
            }
            set
            {
                OnTotalVolumesChanging(value);
                ReportPropertyChanging("TotalVolumes");
                _TotalVolumes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalVolumes");
                OnTotalVolumesChanged();
            }
        }
        private global::System.Decimal _TotalVolumes;
        partial void OnTotalVolumesChanging(global::System.Decimal value);
        partial void OnTotalVolumesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private global::System.Boolean _isActive;
        partial void OnisActiveChanging(global::System.Boolean value);
        partial void OnisActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Profit
        {
            get
            {
                return _Profit;
            }
            set
            {
                OnProfitChanging(value);
                ReportPropertyChanging("Profit");
                _Profit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Profit");
                OnProfitChanged();
            }
        }
        private global::System.Decimal _Profit;
        partial void OnProfitChanging(global::System.Decimal value);
        partial void OnProfitChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eTradeDbModel", "FK_BuyOrders_Portfolio", "BuyOrder")]
        public EntityCollection<BuyOrder> BuyOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuyOrder>("eTradeDbModel.FK_BuyOrders_Portfolio", "BuyOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuyOrder>("eTradeDbModel.FK_BuyOrders_Portfolio", "BuyOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eTradeDbModel", "FK_Portfolio_Profile", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("eTradeDbModel.FK_Portfolio_Profile", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("eTradeDbModel.FK_Portfolio_Profile", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("eTradeDbModel.FK_Portfolio_Profile", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("eTradeDbModel.FK_Portfolio_Profile", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eTradeDbModel", "FK_SellOrders_Portfolio", "SellOrder")]
        public EntityCollection<SellOrder> SellOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SellOrder>("eTradeDbModel.FK_SellOrders_Portfolio", "SellOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SellOrder>("eTradeDbModel.FK_SellOrders_Portfolio", "SellOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eTradeDbModel", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="profileID">Initial value of the ProfileID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="profileName">Initial value of the ProfileName property.</param>
        /// <param name="isDefault">Initial value of the isDefault property.</param>
        public static Profile CreateProfile(global::System.Int64 profileID, global::System.Int64 userID, global::System.String profileName, global::System.Boolean isDefault)
        {
            Profile profile = new Profile();
            profile.ProfileID = profileID;
            profile.UserID = userID;
            profile.ProfileName = profileName;
            profile.isDefault = isDefault;
            return profile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                if (_ProfileID != value)
                {
                    OnProfileIDChanging(value);
                    ReportPropertyChanging("ProfileID");
                    _ProfileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileID");
                    OnProfileIDChanged();
                }
            }
        }
        private global::System.Int64 _ProfileID;
        partial void OnProfileIDChanging(global::System.Int64 value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int64 _UserID;
        partial void OnUserIDChanging(global::System.Int64 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProfileName
        {
            get
            {
                return _ProfileName;
            }
            set
            {
                OnProfileNameChanging(value);
                ReportPropertyChanging("ProfileName");
                _ProfileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProfileName");
                OnProfileNameChanged();
            }
        }
        private global::System.String _ProfileName;
        partial void OnProfileNameChanging(global::System.String value);
        partial void OnProfileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDefault
        {
            get
            {
                return _isDefault;
            }
            set
            {
                OnisDefaultChanging(value);
                ReportPropertyChanging("isDefault");
                _isDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isDefault");
                OnisDefaultChanged();
            }
        }
        private global::System.Boolean _isDefault;
        partial void OnisDefaultChanging(global::System.Boolean value);
        partial void OnisDefaultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eTradeDbModel", "FK_Profile_eUsers", "eUser")]
        public eUser eUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<eUser>("eTradeDbModel.FK_Profile_eUsers", "eUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<eUser>("eTradeDbModel.FK_Profile_eUsers", "eUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<eUser> eUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<eUser>("eTradeDbModel.FK_Profile_eUsers", "eUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<eUser>("eTradeDbModel.FK_Profile_eUsers", "eUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eTradeDbModel", "FK_WatchList_Profile", "WatchList")]
        public EntityCollection<WatchList> WatchLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WatchList>("eTradeDbModel.FK_WatchList_Profile", "WatchList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WatchList>("eTradeDbModel.FK_WatchList_Profile", "WatchList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eTradeDbModel", "FK_Portfolio_Profile", "Portfolio")]
        public EntityCollection<Portfolio> Portfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Portfolio>("eTradeDbModel.FK_Portfolio_Profile", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Portfolio>("eTradeDbModel.FK_Portfolio_Profile", "Portfolio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eTradeDbModel", Name="SellOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SellOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SellOrder object.
        /// </summary>
        /// <param name="sellID">Initial value of the SellID property.</param>
        /// <param name="portfolioID">Initial value of the PortfolioID property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="dateofSell">Initial value of the DateofSell property.</param>
        public static SellOrder CreateSellOrder(global::System.Int64 sellID, global::System.Int64 portfolioID, global::System.Decimal volume, global::System.Decimal unitPrice, global::System.DateTime dateofSell)
        {
            SellOrder sellOrder = new SellOrder();
            sellOrder.SellID = sellID;
            sellOrder.PortfolioID = portfolioID;
            sellOrder.Volume = volume;
            sellOrder.UnitPrice = unitPrice;
            sellOrder.DateofSell = dateofSell;
            return sellOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SellID
        {
            get
            {
                return _SellID;
            }
            set
            {
                if (_SellID != value)
                {
                    OnSellIDChanging(value);
                    ReportPropertyChanging("SellID");
                    _SellID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SellID");
                    OnSellIDChanged();
                }
            }
        }
        private global::System.Int64 _SellID;
        partial void OnSellIDChanging(global::System.Int64 value);
        partial void OnSellIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PortfolioID
        {
            get
            {
                return _PortfolioID;
            }
            set
            {
                OnPortfolioIDChanging(value);
                ReportPropertyChanging("PortfolioID");
                _PortfolioID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioID");
                OnPortfolioIDChanged();
            }
        }
        private global::System.Int64 _PortfolioID;
        partial void OnPortfolioIDChanging(global::System.Int64 value);
        partial void OnPortfolioIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Decimal _Volume;
        partial void OnVolumeChanging(global::System.Decimal value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateofSell
        {
            get
            {
                return _DateofSell;
            }
            set
            {
                OnDateofSellChanging(value);
                ReportPropertyChanging("DateofSell");
                _DateofSell = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateofSell");
                OnDateofSellChanged();
            }
        }
        private global::System.DateTime _DateofSell;
        partial void OnDateofSellChanging(global::System.DateTime value);
        partial void OnDateofSellChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eTradeDbModel", "FK_SellOrders_Portfolio", "Portfolio")]
        public Portfolio Portfolio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("eTradeDbModel.FK_SellOrders_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("eTradeDbModel.FK_SellOrders_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> PortfolioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("eTradeDbModel.FK_SellOrders_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("eTradeDbModel.FK_SellOrders_Portfolio", "Portfolio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eTradeDbModel", Name="WatchList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WatchList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WatchList object.
        /// </summary>
        /// <param name="watchListID">Initial value of the WatchListID property.</param>
        /// <param name="profileID">Initial value of the ProfileID property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        /// <param name="watchDate">Initial value of the WatchDate property.</param>
        /// <param name="isActive">Initial value of the isActive property.</param>
        public static WatchList CreateWatchList(global::System.Int64 watchListID, global::System.Int64 profileID, global::System.String symbol, global::System.DateTime watchDate, global::System.Boolean isActive)
        {
            WatchList watchList = new WatchList();
            watchList.WatchListID = watchListID;
            watchList.ProfileID = profileID;
            watchList.Symbol = symbol;
            watchList.WatchDate = watchDate;
            watchList.isActive = isActive;
            return watchList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WatchListID
        {
            get
            {
                return _WatchListID;
            }
            set
            {
                if (_WatchListID != value)
                {
                    OnWatchListIDChanging(value);
                    ReportPropertyChanging("WatchListID");
                    _WatchListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WatchListID");
                    OnWatchListIDChanged();
                }
            }
        }
        private global::System.Int64 _WatchListID;
        partial void OnWatchListIDChanging(global::System.Int64 value);
        partial void OnWatchListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                OnProfileIDChanging(value);
                ReportPropertyChanging("ProfileID");
                _ProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileID");
                OnProfileIDChanged();
            }
        }
        private global::System.Int64 _ProfileID;
        partial void OnProfileIDChanging(global::System.Int64 value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime WatchDate
        {
            get
            {
                return _WatchDate;
            }
            set
            {
                OnWatchDateChanging(value);
                ReportPropertyChanging("WatchDate");
                _WatchDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WatchDate");
                OnWatchDateChanged();
            }
        }
        private global::System.DateTime _WatchDate;
        partial void OnWatchDateChanging(global::System.DateTime value);
        partial void OnWatchDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private global::System.Boolean _isActive;
        partial void OnisActiveChanging(global::System.Boolean value);
        partial void OnisActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eTradeDbModel", "FK_WatchList_Profile", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("eTradeDbModel.FK_WatchList_Profile", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("eTradeDbModel.FK_WatchList_Profile", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("eTradeDbModel.FK_WatchList_Profile", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("eTradeDbModel.FK_WatchList_Profile", "Profile", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
